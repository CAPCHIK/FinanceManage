name: .NET

on: push

env:
  IMAGE_ID: docker.pkg.github.com/capchik/financemanage/tg-bot

jobs:
  build:
    runs-on: ubuntu-latest
    name: ${{ matrix.name }}
    strategy:
      matrix:
        include:
          - name: 'telegram bot'
            image-id: docker.pkg.github.com/capchik/financemanage/tg-bot
            package-id: tg-bot
            build-folder: deploy/tg_bot
            nuke-task: PublishTgBot
            service-name: fin-manage_tg_bot
          - name: 'site'
            image-id: docker.pkg.github.com/capchik/financemanage/site
            package-id: site
            build-folder: deploy/site
            nuke-task: PublishSite
            service-name: fin-manage_site
    steps:
      - uses: actions/checkout@v2
        submodules: recursive
      - name: Print new build number
        run: echo "Build number is $GITHUB_RUN_NUMBER"
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: Restore nuke tool
        run: dotnet tool restore
      - name: Build
        env:
          NUKE_TASK: ${{ matrix.nuke-task }}
        run: dotnet nuke $NUKE_TASK --build-id $GITHUB_RUN_NUMBER
      - name: Build docker image
        env:
          IMAGE_ID: ${{ matrix.image-id }}
          BUILD_FOLDER: ${{ matrix.build-folder }}
        run: docker build -t $IMAGE_ID $BUILD_FOLDER
      - name: Log into registry
        if: ${{ github.ref == 'refs/heads/master' }}
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: Delete old package
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: actions/delete-package-versions@v1
        with:
          package-name: ${{ matrix.package-id }}
      - name: Push image
        if: ${{ github.ref == 'refs/heads/master' }}
        env:
          IMAGE_ID: ${{ matrix.image-id }}
        run: |
          echo IMAGE_ID=$IMAGE_ID

          docker tag $IMAGE_ID $IMAGE_ID:build-$GITHUB_RUN_NUMBER
          docker tag $IMAGE_ID $IMAGE_ID:latest
          docker push $IMAGE_ID:build-$GITHUB_RUN_NUMBER
          docker push $IMAGE_ID:latest
      - name: Update service
        if: ${{ github.ref == 'refs/heads/master' }}
        env:
          IMAGE_ID: ${{ matrix.image-id }}
          SERVICE_NAME: ${{ matrix.service-name }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          envs: IMAGE_ID,GITHUB_RUN_NUMBER,SERVICE_NAME
          script: docker service update --image $IMAGE_ID:build-$GITHUB_RUN_NUMBER $SERVICE_NAME

@inject IMediator Mediator
@inject Microsoft.Extensions.Options.IOptions<FinanceManage.Site.Client.Models.Options.TelegramBotInfo> TelegramBotInfo


<Title>Список чатов</Title>
@if (chats == null)
{
    <Row Justify="center">
        <AntDesign.Col>
            <Spin Size="large" Tip="Загрузка чатов..."></Spin>
        </AntDesign.Col>
    </Row>
}
else if (chats.Count == 0)
{
    <Space Direction="DirectionVHType.Vertical">
        <SpaceItem>
            <AntDesign.Text>Здесь будут отображаться чаты, для которых бот будет собирать статистику трат. Вы можете написать боту напрямую, для сбора личной статистики или добавить его в чат для совместного использования.</AntDesign.Text>

        </SpaceItem>
        <SpaceItem>

            <NavLink href="@($"https://t.me/{TelegramBotInfo.Value.UserName}")">
                <Button Type="@ButtonType.Primary">Написать боту</Button>
            </NavLink>

        </SpaceItem>
    </Space>
}
else
{
    <AntList Bordered DataSource="chats">
        <ChildContent Context="item">
            <ListItem NoFlex="true">
                <Row Justify="center" Align="middle">
                    <AntDesign.Col>
                        <Title Level="2">@item.ChatName</Title>
                    </AntDesign.Col>
                </Row>
                <Row Justify="center" Align="middle">
                    <AntDesign.Col Lg="12" Sm="24">
                        <Title Level="3" Style="text-align: center">Расходы</Title>
                        <FinanceManage.Site.Client.Pages.Purchases.MonthForChatPie ChatId="item.ChatId" />
                        <Row Justify="center" Gutter="16">
                            <AntDesign.Col>
                                <NavLink href="@($"purchases/{item.ChatId}/edit")">
                                    <Button Size="large" Style="display: flex; align-items: center;">
                                        <Icon Type="edit" Theme="outline" />
                                        Редактировать
                                    </Button>
                                </NavLink>
                            </AntDesign.Col>
                            <AntDesign.Col>
                                <NavLink href="@($"purchases/{item.ChatId}")">
                                    <Button Size="large" Style="display: flex; align-items: center;">
                                        <Icon Type="area-chart" Theme="outline" />
                                        Графики
                                    </Button>
                                </NavLink>
                            </AntDesign.Col>
                        </Row>
                    </AntDesign.Col>
                    <AntDesign.Col Lg="12" Sm="24">
                        <Title Level="3" Style="text-align: center">Состояние</Title>
                        <FinanceManage.Site.Client.Pages.Wallets.BalancesPie ChatId="item.ChatId" />
                        <Row Justify="center" Gutter="16">
                            <AntDesign.Col>
                                <NavLink href="@($"wallets/{item.ChatId}")">
                                    <Button Size="large" Style="display: flex; align-items: center;" Icon="@IconType.Outline.Wallet">
                                        Кошельки
                                    </Button>
                                </NavLink>
                            </AntDesign.Col>
                        </Row>
                    </AntDesign.Col>
                </Row>
            </ListItem>
        </ChildContent>
    </AntList>
}

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }


    private List<GetChatsListForUser.Response> chats;

    protected async override Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        var state = await authenticationStateTask;
        //return;
        chats = await Mediator.Send(new GetChatsListForUser.Command(0));
    }
}
